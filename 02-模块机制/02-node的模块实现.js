/**
 * 在Node中引入模块,需要经历如下3个步骤:
 * > 路径分析
 * > 文件定位
 * > 编译执行
 */


// package.json : CommonJS包规范定义的包描述文件.


// 模块编译
// 编译和执行是引入文件模块的最后一个阶段. 定位到具体的文件后, Node会新建一个模块对象,然后
// 更具路径载入并编译. 对于不同的文件扩展名, 其载入方法也有所不同,具体如下:

/**
 * > .js文件: 通过fs模块同步读取文件后编译执行.
 * > .node文件: 这是用C/C++编写的扩展文件,通过 dlopen()方法加载最后编译生成的文件.
 * > .json文件: 通过fs模块同步读取文件后,用 JSON.parse()解析返回结果.
 * > 其余扩展名: 它们都被当做.js文件载入.
 * 每一个编译成功的模块都会将其文件路径作为索引缓存在 Module._cache 对象上, 以提高二次
 * 引入的性能.
 */